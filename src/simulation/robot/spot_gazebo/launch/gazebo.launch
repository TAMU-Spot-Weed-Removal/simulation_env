<launch>
    <arg name="robot_name"             default="/"/>  <!-- dont change this name -->
    <arg name="base_frame"             default="body"/>
    <arg name="use_sim_time"           default="true"/>
    <arg name="gui"                    default="true"/>
    <arg name="headless"               default="false"/>
    <arg name="paused"                 default="false"/>
    <arg name="ros_control_file"       default="$(find spot_gazebo)/config/ros_control.yaml" />
    <arg name="ros_control_file2"      default="$(find spot_gazebo)/config/ros_control_no_gripper.yaml" />
    <arg name="gazebo_world"           default="$(find spot_gazebo)/worlds/field.world" />
    <arg name="world_init_x"           default="0.0" />
    <arg name="world_init_y"           default="0.0" />
    <arg name="world_init_z"          default="0.5" />
    <arg name="world_init_heading"    default="0.0" />
    <arg name="enable_contact_sensor"  default="true" />
    <arg name="respawn_controller"     default="false"/>
    <arg name="UnitreeGripperYN"       default="false"/>
    <arg name="joints_map_file"        default="$(find spot_gazebo)/config/joints/joints.yaml"/>
    <arg name="links_map_file"         default="$(find spot_gazebo)/config/links/links.yaml"/>
    <arg name="gait_config_file"       default="$(find spot_gazebo)/config/gait/gait.yaml"/> 
    <arg name="hardware_connected"     default="false" />
    <arg name="publish_foot_contacts"  default="false" />
    <arg name="publish_joint_control"  default="true" />
    <arg name="joint_controller_topic" default="joint_group_position_controller/command" />
    <arg name="description_file"       default="$(find spot_description)/urdf/spot.urdf" />
    <arg name="close_loop_odom"        default="true"/>
    <arg name="has_imu"                default="true" />
    <arg name="gazebo"                 default="true"/>
    <arg name="rviz"                   default="true"/>
    <arg name="lite"               default="false" />  <!-- Set to true if you're using CHAMP lite version. Only useful for microcontrollers. -->
    <arg name="publish_odom_tf"        default="true" />
    <arg name="publish_local_odom_tf"  default="true" />
    <arg name="run_state_estimation"   default="true" />
    <arg if="$(eval arg('robot_name') == '/')"  name="frame_prefix" value="" />
    <arg unless="$(eval arg('robot_name') == '/')" name="frame_prefix" value="$(arg robot_name)/" />
    <arg name="rviz_ref_frame"         default="$(arg frame_prefix)odom"/>


    <!-- this should be only called once on multi-robot simulation -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg gazebo_world)"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="paused" value="$(arg paused)"/>
        <arg name="use_sim_time" value="$(arg use_sim_time)"/>
        <arg name="headless" value="$(arg headless)"/>
    </include>

    <include file="$(find spot_config)/launch/bringup.launch">
        <arg name="robot_name"             value="$(arg robot_name)"/>
        <arg name="gazebo"                 value="true"/>
        <arg name="lite"                   value="$(arg lite)"/>
        <arg name="rviz"                   value="$(arg rviz)"/>
        <arg name="joint_controller_topic" value="joint_group_position_controller/command"/>
        <arg name="hardware_connected"     value="false"/>
        <arg name="publish_foot_contacts"  value="false"/>
        <arg name="close_loop_odom"        value="true"/>
    </include>

    <!-- <include file="$(find champ_gazebo)/launch/gazebo.launch">
        <arg name="robot_name"         value="$(arg robot_name)"/>
        <arg name="lite"               value="$(arg lite)"/>
        <arg name="ros_control_file"   value="$(arg ros_control_file)"/>
        <arg name="gazebo_world"       value="$(arg gazebo_world)"/>
        <arg name="world_init_x"       value="$(arg world_init_x)" />
        <arg name="world_init_y"       value="$(arg world_init_y)" />
        <arg name="world_init_heading" value="$(arg world_init_heading)" />
        <arg name="gui"                value="$(arg gui)" />
    </include>     -->


    <param name="robot_description" command="$(find xacro)/xacro $(find spot_description)/urdf/spot.urdf.xacro UnitreeGripper:=$(arg UnitreeGripperYN) --inorder" />
    <group ns="$(arg robot_name)">
        <!-- ==================== LOAD PARAMETERS ==================== -->
        <!-- <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
            <param name="use_tf_static"     value="false"/>
            <param name="publish_frequency" value="200"/>
            <param name="ignore_timestamp" value="true"/>
        </node> -->

        <rosparam command="load" ns="gait"       file="$(arg gait_config_file)" />
        <rosparam command="load" ns="links_map"  file="$(arg links_map_file)" />
        <rosparam command="load" ns="joints_map" file="$(arg joints_map_file)" />
        <!-- <node pkg="champ_base" name="champ_controller" type="quadruped_controller_node" output="screen">
            <param                                    name="gazebo"                 value="$(arg gazebo)" />
            <param if="$(arg hardware_connected)"     name="publish_joint_states"   value="false" />
            <param unless="$(arg hardware_connected)" name="publish_joint_states"   value="true" />
            <param                                    name="publish_foot_contacts"  value="$(arg publish_foot_contacts)" />
            <param                                    name="publish_joint_control"  value="$(arg publish_joint_control)" />
            <param                                    name="joint_controller_topic" value="$(arg joint_controller_topic)" />
        </node> -->

        <!-- ==================== URDF MODELS ==================== -->
        <node  name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
            args="-urdf -model $(arg robot_name)  
            -param robot_description -robot_namespace $(arg robot_name)
            -x $(arg world_init_x) -y $(arg world_init_y) -z $(arg world_init_z) -Y $(arg world_init_heading)
            -R 0.0 -P 0.0 -Y 0.0
            -J joint1 0.0
            -J joint2 0.01
            -J joint3 -0.01
            -J joint4 -0.1874
            -J joint5 -0.1358
            -J joint6 0.0" />

        <!-- ==================== Controllers ==================== -->
        <group if="$(arg UnitreeGripperYN)">
            <rosparam file="$(arg ros_control_file)" command="load"/>
        </group>
        <group unless="$(arg UnitreeGripperYN)">
            <rosparam file="$(arg ros_control_file2)" command="load"/>
        </group>

        <!-- <include file="$(find champ_bringup)/launch/include/velocity_smoother.launch" /> -->
        <group unless="$(arg UnitreeGripperYN)">
            <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="$(arg respawn_controller)"
                output="screen" args="joint_states_controller joint_group_position_controller
                                      /z1_gazebo/Joint01_controller /z1_gazebo/Joint02_controller /z1_gazebo/Joint03_controller
                                      /z1_gazebo/Joint04_controller /z1_gazebo/Joint05_controller /z1_gazebo/Joint06_controller">
            </node>
        </group>

        <group if="$(arg UnitreeGripperYN)">
            <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="$(arg respawn_controller)"
                output="screen" args="joint_states_controller joint_group_position_controller
                                      /z1_gazebo/Joint01_controller /z1_gazebo/Joint02_controller /z1_gazebo/Joint03_controller
                                      /z1_gazebo/Joint04_controller /z1_gazebo/Joint05_controller /z1_gazebo/Joint06_controller /z1_gazebo/gripper_controller">
            </node>
        </group>
        
        <!-- ==================== SPOT CONTACT SENSOR ==================== -->
        <node if="$(arg enable_contact_sensor)"  pkg="champ_gazebo" name="contact_sensor" type="contact_sensor" output="screen"/>

        <!-- ==================== STATE ESTIMATION ==================== -->
        <!-- <node if="$(arg run_state_estimation)" pkg="champ_base" name="state_estimator" type="state_estimation_node" output="screen">
            <param if="$(arg hardware_connected)" name="orientation_from_imu" value="true"/>
            <param if="$(arg gazebo)" name="orientation_from_imu" value="true"/>            
        </node> -->

        <!-- <node if="$(arg publish_local_odom_tf)" pkg="robot_localization" type="ekf_localization_node" name="base_to_footprint_ekf"> 
            <remap from="odometry/filtered" to="odom/local" />
            <param name="base_link_frame" value="$(arg base_frame)" />
            <rosparam command="load" file="$(find champ_base)/config/ekf/base_to_footprint.yaml" />
        </node> -->

        <!-- <node if="$(arg publish_odom_tf)" pkg="robot_localization" type="ekf_localization_node" name="footprint_to_odom_ekf"> 
            <remap from="odometry/filtered" to="odom" />
            <rosparam command="load" file="$(find champ_base)/config/ekf/footprint_to_odom.yaml" />
        </node> -->
        
        <!-- <node if="$(arg rviz)" name="rviz" pkg="rviz" type="rviz"
            args="-d $(find champ_description)/rviz/urdf_viewer.rviz -f $(arg rviz_ref_frame)"
            output="screen"/> -->
    </group>


    <!-- Stereo matching -->
    <arg name="manager" default="/stereo_matching"/>
    <node pkg="nodelet" type="nodelet" name="stereo_matching"  args="manager"/>
    <group ns="/stereo_camera">

        <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" output="screen"/>

        <node pkg="nodelet" type="nodelet" name="disparity" args="load stereo_image_proc/disparity $(arg manager)">
            <param name="disparity_range" type="int" value="128" />
            <param name="min_disparity" type="int" value="0" />
            <param name="approximate_sync" type="bool" value="true" />
            <param name="correlation_window_size" type="int" value="21" />
            <param name="uniqueness_ratio" type="int" value="15" />
        </node>  
    
        <node pkg="nodelet" type="nodelet" name="point_cloud2" args="load stereo_image_proc/point_cloud2 $(arg manager)">
            <param name="approximate_sync" type="bool" value="true" />
            <param name="queue_size" type="int" value="30" />
        </node>
    </group>

</launch>
